
h1. Nunjucks

I'm tired of the lack of good templating systems for large js apps. The biggest missing feature between all of them is template inheritance, something necessary for a non-trivial site. Other problems is the ugliness of embedding javascript, too much logic in templates, etc.

I hope that Nunjucks can be better. It is heavily jinja2 inspired because I think it is a great solution for templating. Nunjucks does not claim to be a direct port of jinja2, but most things will work the same in both projects.

h2. Installation

bc. npm install nunjucks

h2. Features

* variables
* jinja2-style parsing @{{ foo('bar', 1) }}@
* conditionals
* iteration
* array/dict lookups
* template inheritance using @extends@ and @block@ tags
* include other templates with @include@
* ignore template parsing with @raw@ tag
* very fast and active development!

h2. Express

To integrate with express, do the following (this will change before the first release):

bc.. var nunjucks = require('nunjucks');
var loaders = nunjucks.loaders;
var express = require('express');

var env = new nunjucks.Environment(new loaders.FileSystemLoader('templates'));
env.express(app);

h2. Using

Here is an example template that works with the current code:
 
bc.. --- base.html

<!DOCTYPE html>
<html>
  <head>
    <title>{{ title }}</title>
  </head>
  <body>
    {% block content %}{% endblock %}
  </body>
</html>

--- index.html

{% extends "base.html" %}

{% block content %}

{# Variables and filters #}
Hello {{ name|title }}!

{# Call a function #}
{{ messages() }}

{# Conditionals #}    
{% if sick %}
  no
{% elif throwing %}
  THROWING UP?!
{% elif pooping %}
  STOP POOPING
{% else %}
  GOOD!
{% endif %}

{# For iteration #}
<p>
  Let's print some numbers:
  <ul>
  {% for i in [1,2,3,4,5] %}
   <li>{{ i }}</li>
  {% endfor %}
  </ul>
</p>

{% endblock %}

p. To compile templates, you can create a Template directly or load one from an environment object. Right now the environment just loads the template from the disk relative to the current location.

bc.. var nunjucks = require('nunjucks');
var tmpl = new nunjucks.Template('Hello {{ username }}');
console.log(tmpl.render({ username: "james" }));

// From an environment
var env = new nunjucks.Environment();
var tmpl = env.getTemplate('test.html');
console.log(tmpl.render({ username: "james" }));

h2. Status

All of the features that will be in v0.1 have been ported over. I am currently testing the codebase and letting it solidify before I make the first release. The focus is now documentation, benchmarks, and tests.

Features needed for v0.1:

* Better express integration
* Builtin filters
* Thorough-ish documentation, especially what features are missing
* Benchmarks

Features needed for v0.2:

* Client-side js support (load precompiled templates, convert modules, etc)
* Macros, a few other missing jinja2 constructs
* Even more thorough documentation